<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SAP Fioneer Download Manager Test Harness</title>
  <style>
    /* Reset and base styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f5f5f5;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }

    /* Main container */
    .container {
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
      text-align: center;
    }

    /* Typography */
    h1 {
      color: #333;
      margin-bottom: 10px;
      font-size: 1.5rem;
      font-weight: 600;
    }

    .subtitle {
      color: #666;
      font-size: 0.9rem;
      margin-bottom: 25px;
      line-height: 1.4;
    }

    /* File info */
    .file-info {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 4px;
      margin: 20px 0;
      border-left: 4px solid #007bff;
    }

    .file-title {
      font-weight: 600;
      color: #333;
      margin-bottom: 5px;
      font-size: 0.85rem;
    }

    .file-input {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-family: monospace;
      font-size: 0.9rem;
      margin-bottom: 15px;
    }

    .file-input:focus {
      outline: none;
      border-color: #007bff;
      box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
    }

    .token-display {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-family: monospace;
      font-size: 0.75rem;
      word-break: break-all;
      line-height: 1.3;
      resize: vertical;
      min-height: 80px;
    }

    .token-display:focus {
      outline: none;
      border-color: #007bff;
      box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
    }

    /* Button */
    .btn {
      width: 100%;
      padding: 12px;
      border: none;
      border-radius: 4px;
      font-size: 0.9rem;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s;
      background: #007bff;
      color: white;
      margin: 15px 0;
    }

    .btn:hover {
      background: #0056b3;
    }

    .btn:disabled {
      background: #6c757d;
      cursor: not-allowed;
    }

    /* Status messages */
    .status {
      margin: 15px 0;
      padding: 12px;
      border-radius: 4px;
      font-size: 0.9rem;
      display: none;
    }

    .status.success {
      background: #e8f5e8;
      color: #2e7d32;
      border: 1px solid #a5d6a7;
    }

    .status.error {
      background: #ffebee;
      color: #c62828;
      border: 1px solid #ef9a9a;
    }

    /* Server status */
    .server-status {
      margin-top: 20px;
      padding: 10px;
      background: #f8f9fa;
      border-radius: 4px;
      font-size: 0.85rem;
      color: #666;
    }

    .status-indicator {
      display: inline-block;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      margin-right: 8px;
      background: #dc3545;
    }

    .status-indicator.online {
      background: #28a745;
    }

    .status-indicator.checking {
      animation: pulse 1.5s infinite;
    }

    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Header -->
    <h1>SAP Fioneer Download Manager Test Harness</h1>
    <p class="subtitle">Launch the download manager to securely download files from Artifactory</p>
    
    <!-- File information -->
    <div class="file-info">
      <div class="file-title">File Path</div>
      <input type="text" id="filePath" class="file-input" value="Fioneer AI Agent/REL/1.0.0/K-100COINFAA.SAR" placeholder="Enter file name or path...">
      
      <div class="file-title">Access Token</div>
      <textarea id="accessToken" class="token-display" placeholder="Enter your Artifactory access token here..."></textarea>
    </div>

    <!-- Launch button -->
    <button id="launchBtn" class="btn" onclick="launchDownload()">
      Launch Download Manager
    </button>

    <!-- Status display -->
    <div id="status" class="status"></div>

    <!-- Server status -->
    <div class="server-status">
      <span id="serverIndicator" class="status-indicator checking"></span>
      <span id="serverText">Checking server status...</span>
    </div>
  </div>

  <script>
    /**
     * SAP Fioneer Download Manager Test harness
     * 
     * Static HTML page that launches the download manager in a popup window.
     * Checks server status and provides user feedback.
     * 
     * @author SAP Fioneer
     * @version 1.0.0
     */

    // Application state
    let serverOnline = false;

    // DOM element references
    const elements = {
      launchBtn: document.getElementById('launchBtn'),
      status: document.getElementById('status'),
      serverIndicator: document.getElementById('serverIndicator'),
      serverText: document.getElementById('serverText'),
      accessToken: document.getElementById('accessToken'),
      filePath: document.getElementById('filePath')
    };

    /**
     * Display status message to user
     * @param {string} message - Message to display
     * @param {string} type - Type of message: 'success' or 'error'
     */
    function showStatus(message, type) {
      elements.status.textContent = message;
      elements.status.className = `status ${type}`;
      elements.status.style.display = 'block';
      
      // Auto-hide after 5 seconds
      setTimeout(() => {
        elements.status.style.display = 'none';
      }, 5000);
    }

    /**
     * Update server status display
     * @param {boolean} online - Whether server is online
     */
    function updateServerStatus(online) {
      serverOnline = online;
      
      elements.serverIndicator.classList.remove('checking');
      elements.launchBtn.disabled = !online;
      
      if (online) {
        elements.serverIndicator.classList.add('online');
        elements.serverText.textContent = 'Server online - Ready to launch';
      } else {
        elements.serverIndicator.classList.remove('online');
        elements.serverText.textContent = 'Server offline - Please start the server first';
      }
    }

    /**
     * Check if the local server is running
     */
    async function checkServerStatus() {
      try {
        const response = await fetch('http://localhost:3000/health');
        updateServerStatus(response.ok);
      } catch (error) {
        updateServerStatus(false);
      }
    }

    /**
     * Call Artifactory tokens API (logged in server console)
     */
    async function checkTokenAttributes() {
      const token = elements.accessToken.value.trim();
      
      if (!token) {
        return;
      }

      try {
        const response = await fetch('http://localhost:3000/token-attributes', {
          method: 'GET',
          headers: {
            'Authorization': `Bearer ${token}`,
            'Accept': 'application/json'
          }
        });

        if (response.ok) {
          const tokensData = await response.json();
          console.log('Token attributes retrieved successfully - check server console for details');
        } else {
          console.error('Token attributes request failed:', response.status);
        }
        
      } catch (error) {
        console.error('Token API error:', error);
      }
    }

    /**
     * Launch the download manager in a popup window
     */
    function launchDownload() {
      if (!serverOnline) {
        showStatus('❌ Server is offline. Please start the server with "npm start" first.', 'error');
        return;
      }

      const token = elements.accessToken.value.trim();
      const filePath = elements.filePath.value.trim();
      
      if (!token) {
        showStatus('❌ Please enter an access token before launching.', 'error');
        return;
      }
      
      if (!filePath) {
        showStatus('❌ Please enter a file path before launching.', 'error');
        return;
      }

      // Call token attributes API
      checkTokenAttributes();

      try {
        // Open download manager in small popup window with token and filepath parameters
        const downloadUrl = `http://localhost:3000/download-page?token=${encodeURIComponent(token)}&filepath=${encodeURIComponent(filePath)}`;
        const windowFeatures = 'width=400,height=500,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,location=no,status=no';
        const newWindow = window.open(downloadUrl, 'SAPFioneerDownloadManager', windowFeatures);
        
        if (!newWindow) {
          // Fallback if popup blocked - open in new tab
          window.open(downloadUrl, '_blank');
          showStatus('✅ Download manager opened in new tab!', 'success');
        }
        // No status message for successful popup launch
        
      } catch (error) {
        console.error('Launch error:', error);
        showStatus('❌ Failed to launch download manager.', 'error');
      }
    }

    /**
     * Initialize the application
     */
    function init() {
      // Check server status immediately
      checkServerStatus();
      
      // Check server status every 10 seconds
      setInterval(checkServerStatus, 10000);
      
      console.log('SAP Fioneer Download Manager Test harness initialized');
    }

    // Initialize when page loads
    window.addEventListener('load', init);
  </script>
</body>
</html>